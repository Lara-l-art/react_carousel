{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","position","prevAndNextImage","event","props","itemWidth","frameSize","step","infinite","images","maxPosition","length","target","name","setState","Math","max","min","this","animationDuration","className","style","width","type","onClick","marginLeft","transitionDuration","map","elem","index","key","src","alt","left","top","React","Component","validFrameSizeAndStep","Array","fill","item","validWidth","validAnimDuration","App","handleChange","value","isInfinite","id","onChange","element","htmlFor","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5fc1b7d1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    position: 0,\n  }\n\n  prevAndNextImage = (event) => {\n    const { itemWidth, frameSize, step, infinite, images } = this.props;\n    const maxPosition = itemWidth * images.length - itemWidth * frameSize;\n    const { name } = event.target;\n\n    if (name === 'next') {\n      this.setState(({ position }) => ({\n        position: infinite === true\n        && position === -maxPosition\n          ? 0\n          : Math.max((position - step * itemWidth), -itemWidth\n            * (images.length - step)),\n      }));\n    } else {\n      this.setState(({ position }) => ({\n        position: infinite === true\n        && position === 0\n          ? -maxPosition\n          : Math.min(position + (step * itemWidth), 0),\n      }));\n    }\n  }\n\n  render() {\n    const { frameSize, itemWidth, images, animationDuration } = this.props;\n    const { position } = this.state;\n\n    return (\n      <div\n        className=\"App__container\"\n        style={{\n          width: `${frameSize * itemWidth + 65}px`,\n        }}\n      >\n        <button\n          type=\"button\"\n          name=\"prev\"\n          className=\"button\"\n          onClick={this.prevAndNextImage}\n        >\n          &#8656;\n        </button>\n\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              marginLeft: position,\n              transitionDuration: `position ${animationDuration}s`,\n            }}\n          >\n            {images.map((elem, index) => (\n              <li\n                key={elem + 1}\n                className=\"Carousel__list-element\"\n              >\n                <img\n                  src={elem}\n                  alt={index + 1}\n                  className=\"Carousel__list-picture\"\n                />\n\n                <span style={{\n                  position: 'absolute',\n                  left: '0',\n                  top: '0',\n                }}\n                >\n                  {index + 1}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          name=\"next\"\n          className=\"button\"\n          onClick={this.prevAndNextImage}\n        >\n          &#8658;\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst validFrameSizeAndStep = new Array(3)\n  .fill(0).map((item, index) => index + 1);\nconst validWidth = new Array(3)\n  .fill(0).map((item, index) => (index + 1) * 130);\nconst validAnimDuration = new Array(3)\n  .fill(0).map((item, index) => (index + 8) * 100);\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    width: 130,\n    animationDuration: 1000,\n    infinite: true,\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'frameSize':\n        this.setState({\n          frameSize: +value,\n        });\n        break;\n      case 'step':\n        this.setState({\n          step: +value,\n        });\n        break;\n      case 'width':\n        this.setState({\n          width: +value,\n        });\n        break;\n      case 'duration':\n        this.setState({\n          animationDuration: +value,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  isInfinite = () => {\n    this.setState(state => ({\n      infinite: !state.infinite,\n    }));\n  }\n\n  render() {\n    const { images,\n      step,\n      frameSize,\n      width,\n      animationDuration,\n      infinite } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <form className=\"innerForm\">\n          <fieldset>\n            <legend>Ð¡hoose your options</legend>\n            <select\n              name=\"frameSize\"\n              id=\"frameSize\"\n              onChange={this.handleChange}\n            >\n              <option value=\"\">Chose frame size</option>\n              {validFrameSizeAndStep.map(element => (\n                <option key={element} value={element}>{element}</option>\n              ))}\n            </select>\n            <select\n              name=\"step\"\n              id=\"step\"\n              onChange={this.handleChange}\n            >\n              <option value=\"\">Chose step</option>\n              {validFrameSizeAndStep.map(element => (\n                <option key={element} value={element}>{element}</option>\n              ))}\n            </select>\n            <select\n              name=\"width\"\n              id=\"width\"\n              onChange={this.handleChange}\n            >\n              <option value=\"\">Chose item width</option>\n              {validWidth.map(element => (\n                <option key={element} value={element}>{element}</option>\n              ))}\n            </select>\n            <select\n              name=\"duration\"\n              id=\"duration\"\n              onChange={this.handleChange}\n            >\n              <option value=\"\">Chose item animation duration</option>\n              {validAnimDuration.map(element => (\n                <option key={element} value={element}>{element}</option>\n              ))}\n            </select>\n          </fieldset>\n          <fieldset>\n            <legend>Do you want the infinite carousel of emojis?</legend>\n            <label htmlFor=\"yes\">Yes</label>\n            <input\n              type=\"radio\"\n              id=\"yes\"\n              name=\"infinite\"\n              value=\"yes\"\n              checked={infinite === true}\n              onChange={this.isInfinite}\n            />\n            <label htmlFor=\"no\">No</label>\n            <input\n              type=\"radio\"\n              id=\"no\"\n              name=\"infinite\"\n              value=\"no\"\n              checked={infinite === false}\n              onChange={this.isInfinite}\n            />\n          </fieldset>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={width}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}